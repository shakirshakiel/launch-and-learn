- name: create group for artifactory
  group:
    name: "{{ artifactory_group }}"
    gid: "{{ artifactory_gid }}"
    system: yes
    state: present
  become: yes

- name: create user for artifactory
  user:
    name: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
    uid: "{{ artifactory_uid }}"
    system: yes
    shell: /bin/bash
    home: /home/artifactory
    create_home: yes
  become: yes

- name: Add cache directory for yum
  become: yes
  blockinfile:
    path: /etc/yum.conf
    marker: "# --- {mark} Added by Ansible ---"
    insertbefore: "EOF"
    block: |
      cachedir=/vagrant-cache/tmp/yum/$basearch/$releasever
      keepcache=1

- name: Add the artifactory repo
  become: yes
  get_url:
    url: https://releases.jfrog.io/artifactory/artifactory-pro-rpms/artifactory-pro-rpms.repo
    dest: /etc/yum.repos.d/artifactory-pro-rpms.repo
    owner: root
    group: root
    mode: '0444'

- name: Enable epel
  become: yes
  package:
    name:
      - epel-release

- name: Install required packages
  become: yes
  package:
    name:
      - python2-jmespath
      - python-requests
      - python-xmltodict
      - python-yaml

- name: Create jfrog directories
  become: yes
  file:
    path: "{{ item }}"
    owner: root
    group: root
    state: directory
    mode: '0755'
  with_items:
    - '/opt/jfrog'

- name: Create data and backup folders for artifactory
  become: yes
  file:
    path: "{{ item }}"
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
    state: directory
    mode: '0755'
  with_items:
    - '/opt/jfrog/artifactory'
    - '/data/artifactory-var'
    - '/data/artifactory-var/etc'
    - '/data/artifactory-var/etc/access'
    - '/data/artifactory-var/etc/artifactory'
    - '/backup-daily'
    - '/backup-weekly'

- name: Create security folder for artifactory
  become: yes
  file:
    path: "{{ item }}"
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
    state: directory
    mode: '0700'
  with_items:
    - '/data/artifactory-var/etc/security'
    - '/data/artifactory-var/etc/artifactory/security'

- name: Symlink data folder for artifactory
  become: yes
  file:
    src: /data/artifactory-var
    dest: /opt/jfrog/artifactory/var
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
    state: link

- name: Install Artifactory and its required packages
  become: yes
  package:
    name:
      - jfrog-artifactory-pro-7.19.8-71908900
    state: present

- name: Copy master key
  become: yes
  template:
    dest: /data/artifactory-var/etc/security/master.key
    src: master.key.j2
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
    mode: '0600'
  notify: "restart artifactory nodes"

- name: Copy artifactory key
  become: yes
  template:
    dest: /data/artifactory-var/etc/artifactory/security/artifactory.key
    src: artifactory.key.j2
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
    mode: '0600'
  notify: "restart artifactory nodes"

- name: configure templates
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
    mode: '0755'
  with_items:
    - { src: system.yaml.j2 , dest: "/data/artifactory-var/etc/system.yaml" }
  notify: "restart artifactory nodes"

- name: configure license
  become: yes
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
    mode: '0640'
  with_items:
    - { src: artifactory.lic , dest: "/data/artifactory-var/etc/artifactory/artifactory.lic" }
  notify: "restart artifactory nodes"

- name: Create admin user
  include_tasks: tasks/admin.yml

- meta: flush_handlers

- name: start artifactory node
  include_tasks: tasks/restart.yml
  vars:
    state: started

- name: include ldap vars_files
  include_vars: ldap.yml

- name: configure ldap settings
  become: yes
  artifactory_system_configuration:
    domain: "{{ artifactory_api_domain }}"
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    config_type: "ldap"
    data:
      ldapSetting: "{{ ldapSetting }}"
      ldapGroupSetting: "{{ ldapGroupSetting }}"
    state: present

- name: Configure ldap groups
  become: yes
  artifactory_entity:
    domain: "{{ artifactory_api_domain }}"
    entity_type: "groups"
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    data: "{{ item }}"
    state: present
  with_items: "{{ ldapGroups }}"

- name: configure proxies
  become: yes
  artifactory_system_configuration:
    domain: "{{ artifactory_api_domain }}"
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    config_type: "proxy"
    data:
      proxies: "{{ proxies }}"
    state: present

- name: configure local repositories
  become: yes
  artifactory_entity:
    domain: "{{ artifactory_api_domain }}"
    entity_type: "local_repository"
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    data: "{{ item }}"
    state: present
  with_items: "{{ localRepositories }}"

- name: configure remote repositories
  become: yes
  artifactory_entity:
    domain: "{{ artifactory_api_domain }}"
    entity_type: "remote_repository"
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    data: "{{ item }}"
    state: present
  with_items: "{{ remoteRepositories }}"

- name: configure virtual repositories
  become: yes
  artifactory_entity:
    domain: "{{ artifactory_api_domain }}"
    entity_type: "virtual_repository"
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    data: "{{ item }}"
    state: present
  with_items: "{{ virtualRepositories }}"

- name: Configure permissions
  become: yes
  artifactory_entity:
    domain: "{{ artifactory_api_domain }}"
    entity_type: "permissions"
    username: "{{ admin_username }}"
    password: "{{ admin_password }}"
    data: "{{ item }}"
    state: present
  with_items: "{{ permissions }}"

# https://www.jfrog.com/jira/browse/RTFACT-16452
#- name: include backup vars_files
#  include_vars: backup.yml
#
#- name: configure backup settings
#  become: yes
#  artifactory_system_configuration:
#    domain: "{{ artifactory_api_domain }}"
#    username: "{{ admin_username }}"
#    password: "{{ admin_password }}"
#    config_type: "backups"
#    data:
#      backups: "{{ backups }}"
#    state: present
